#!/bin/bash
#
# LDAP deploy script - v2.7
#
# Created by Karoly Molnar <kmolnar@cirruscomputing.com>
# Modified by Nimesh Jethwa <njethwa@cirruscomputing.com>
#
# Copyright (c) 1996-2015 Free Open Source Solutions Inc.
# All Rights Reserved
#
# Free Open Source Solutions Inc. owns and reserves all rights, title,
# and interest in and to this software in both machine and human
# readable forms.
#

# Include eseri functions
. ${0%/*}/archive/eseriCommon

# Mark start point in log file
echo "$(date) Deploy LDAP Server"

IT_MAN_USER=$(getParameter manager_username)
SLAPD_CONFIG_DIT_PASSWORD=$(getPassword SLAPD_CONFIG_PASSWORD)
LDAP_LIBNSS_PW=$(getPassword LDAP_PASSWORD_LIBNSS)

# Variables
LDAP_CONFIG_FOLDER=/etc/ldap/
SLAPD_USER=openldap
SLAPD_CONFIG_FOLDER=$LDAP_CONFIG_FOLDER
SLAPD_CONFIG_DIT=$SLAPD_CONFIG_FOLDER/slapd.d
SLAPD_SASL2_CONFIG_FOLDER=$SLAPD_CONFIG_FOLDER/sasl2
SLAPD_SCHEMA_FOLDER=$SLAPD_CONFIG_FOLDER/schema
SYSTEM_DEFAULT_FOLDER=/etc/default
SYSTEM_SSL_FOLDER=/etc/ssl
SYSTEM_SSL_CERTS_FOLDER=$SYSTEM_SSL_FOLDER/certs
SYSTEM_SSL_PRIVATE_FOLDER=$SYSTEM_SSL_FOLDER/private

# Template files
SLAPD_TEMPLATE_CONFIG=${TEMPLATE_FOLDER}/transient/slapd.conf
SLAPD_CONFIG=/etc/ldap/slapd.conf
SLAPD_TEMPLATE_ACL=${TEMPLATE_FOLDER}/transient/slapd.acl
SLAPD_ACL=/etc/ldap/slapd.acl
LDAP_TEMPLATE_LDIF=${TEMPLATE_FOLDER}/transient/slapd.ldif
LDAP_TMP_LDIF=/tmp/slapd.ldif

# Archive files
SLAPD_SEED=$ARCHIVE_FOLDER/slapd.seed
SLAPD_SASL2_CONFIG_ARCHIVE=$ARCHIVE_FOLDER/slapd.conf
SLAPD_SASL2_CONFIG=$SLAPD_SASL2_CONFIG_FOLDER/slapd.conf
SLAPD_SCHEMA_ESERI_ARCHIVE=$ARCHIVE_FOLDER/$SLAPD_SCHEMA_FOLDER/eseri.schema
SLAPD_SCHEMA_ESERI=$ARCHIVE_FOLDER/$SLAPD_SCHEMA_FOLDER/eseri.schema
SLAPD_DEFAULT_CONFIG=$ARCHIVE_FOLDER/$SYSTEM_DEFAULT_FOLDER/slapd
SASLAUTHD_DEFAULT_CONFIG_=$ARCHIVE_FOLDER/$SYSTEM_DEFAULT_FOLDER/saslauthd

SLAPD_SASL2_CONFIG_FOLDER=$SLAPD_CONFIG_FOLDER/sasl2
SLAPD_SCHEMA_FOLDER=$SLAPD_CONFIG_FOLDER/schema
SYSTEM_DEFAULT_FOLDER=/etc/default
SYSTEM_KRB5_KEYTAB=/etc/krb5.keytab
SLAPD_KEYTAB=$SLAPD_CONFIG_FOLDER/aphrodite.slapd.keytab

# Get the system parameters
eseriGetDNS
eseriGetNetwork

# SSL Cert location
SSL_CERT=$SYSTEM_SSL_CERTS_FOLDER/$FQDN_HOSTNAME.pem
SSL_PRIVATE_KEY=$SYSTEM_SSL_PRIVATE_FOLDER/$FQDN_HOSTNAME.pem

# Install the SASL Authentication server
aptGetInstall sasl2-bin
install -o root -g root -m 644 $ARCHIVE_FOLDER/saslauthd $SYSTEM_DEFAULT_FOLDER/
install -o root -g root -m 440 $ARCHIVE_FOLDER/aphrodite.host.keytab $SYSTEM_KRB5_KEYTAB
/etc/init.d/saslauthd stop
/etc/init.d/saslauthd start

# Preseed & Install the LDAP server
debconf-set-selections $ARCHIVE_FOLDER/slapd.seed
aptGetInstall slapd ldap-utils libsasl2-modules-gssapi-mit

# Deploy config files and modify values
install -o root -g root -m 644 $ARCHIVE_FOLDER/eseri.schema $SLAPD_SCHEMA_FOLDER/eseri.schema
install -o root -g root -m 644 $ARCHIVE_FOLDER/slapd $SYSTEM_DEFAULT_FOLDER/slapd
install -o root -g root -m 644 $SLAPD_TEMPLATE_CONFIG $SLAPD_CONFIG
eseriReplaceValues $SLAPD_CONFIG
sed -i -e "s~\[-SLAPD_CONFIG_DIT_PASSWORD-\]~$(slappasswd -h {SSHA} -s $SLAPD_CONFIG_DIT_PASSWORD)~" $SLAPD_CONFIG

install -o root -g $SLAPD_USER -m 640 $SLAPD_TEMPLATE_ACL $SLAPD_ACL
eseriReplaceValues $SLAPD_ACL

# Deploy Keytab
install -o root -g $SLAPD_USER -m 640 $ARCHIVE_FOLDER/aphrodite.slapd.keytab $SLAPD_KEYTAB

# Deploy Certificates
install -o root -g root -m 644 $ARCHIVE_FOLDER/${FQDN_HOSTNAME}_cert.pem $SSL_CERT
install -o root -g ssl-cert -m 640 $ARCHIVE_FOLDER/${FQDN_HOSTNAME}_key.pem $SSL_PRIVATE_KEY
adduser $SLAPD_USER ssl-cert

# To avoid the "tls init def ctx failed 207" error
# gnutls being unable to use the key generated by openssl to read the cert generated by openssl
aptGetInstall gnutls-bin
certtool -k < $SSL_PRIVATE_KEY > /tmp/$FQDN_HOSTNAME.pem
mv /tmp/$FQDN_HOSTNAME.pem $SSL_PRIVATE_KEY

# Deploy SASL2 Config
[ -d $SLAPD_SASL2_CONFIG_FOLDER ] || mkdir -p $SLAPD_SASL2_CONFIG_FOLDER
install -o root -g root -m 644 $ARCHIVE_FOLDER/slapd.conf $SLAPD_SASL2_CONFIG_FOLDER/slapd.conf
adduser $SLAPD_USER sasl

# Create database
install -m 644 $LDAP_TEMPLATE_LDIF $LDAP_TMP_LDIF
parseCapabilities $LDAP_TMP_LDIF
sed -i -e "s/\[-IT_MAN_USER-\]/$IT_MAN_USER/" $LDAP_TMP_LDIF
sed -i -e "s~\[-LDAP_SSHA_PASSWORD_LIBNSS-\]~$(slappasswd -h {SSHA} -s $LDAP_LIBNSS_PW)~" $LDAP_TMP_LDIF
hasCapability Email
if [ $? -eq 0 ] ; then
	LDAP_POSTFIX_PW=$(getPassword LDAP_PASSWORD_POSTFIX)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_POSTFIX-\]~$(slappasswd -h {SSHA} -s $LDAP_POSTFIX_PW)~" $LDAP_TMP_LDIF
	LDAP_DOVECOT_PW=$(getPassword LDAP_PASSWORD_DOVECOT)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_DOVECOT-\]~$(slappasswd -h {SSHA} -s $LDAP_DOVECOT_PW)~" $LDAP_TMP_LDIF
fi
hasCapability Nuxeo
if [ $? -eq 0 ] ; then
	LDAP_NUXEO5_PW=$(getPassword LDAP_PASSWORD_NUXEO5)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_NUXEO5-\]~$(slappasswd -h {SSHA} -s $LDAP_NUXEO5_PW)~" $LDAP_TMP_LDIF
fi
hasCapability WebConferencing
if [ $? -eq 0 ] ; then
	LDAP_WEBHUDDLE_PW=$(getPassword LDAP_PASSWORD_WEBHUDDLE)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_WEBHUDDLE-\]~$(slappasswd -h {SSHA} -s $LDAP_WEBHUDDLE_PW)~" $LDAP_TMP_LDIF
fi
hasCapability Wiki
if [ $? -eq 0 ] ; then
	LDAP_MEDIAWIKI_PW=$(getPassword LDAP_PASSWORD_MEDIAWIKI)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_MEDIAWIKI-\]~$(slappasswd -h {SSHA} -s $LDAP_MEDIAWIKI_PW)~" $LDAP_TMP_LDIF
fi
hasCapability Vtiger
if [ $? -eq 0 ] ; then
	LDAP_VTIGER_PW=$(getPassword LDAP_PASSWORD_VTIGER)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_VTIGER-\]~$(slappasswd -h {SSHA} -s $LDAP_VTIGER_PW)~" $LDAP_TMP_LDIF
fi
hasCapability Timesheet
if [ $? -eq 0 ] ; then
	LDAP_TIMESHEET_PW=$(getPassword LDAP_PASSWORD_TIMESHEET)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_TIMESHEET-\]~$(slappasswd -h {SSHA} -s $LDAP_TIMESHEET_PW)~" $LDAP_TMP_LDIF
fi
hasCapability InstantMessaging
if [ $? -eq 0 ] ; then
	LDAP_XMPP_PW=$(getPassword LDAP_PASSWORD_XMPP)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_XMPP-\]~$(slappasswd -h {SSHA} -s $LDAP_XMPP_PW)~" $LDAP_TMP_LDIF
fi
hasCapability SOGo
if [ $? -eq 0 ] ; then
	LDAP_SOGO_PW=$(getPassword LDAP_PASSWORD_SOGO)
	sed -i -e "s~\[-LDAP_SSHA_PASSWORD_SOGO-\]~$(slappasswd -h {SSHA} -s $LDAP_SOGO_PW)~" $LDAP_TMP_LDIF
fi
hasCapability Redmine
if [ $? -eq 0 ] ; then
        LDAP_REDMINE_PW=$(getPassword LDAP_PASSWORD_REDMINE)
        sed -i -e "s~\[-LDAP_SSHA_PASSWORD_REDMINE-\]~$(slappasswd -h {SSHA} -s $LDAP_REDMINE_PW)~" $LDAP_TMP_LDIF
fi
hasCapability PHPScheduleIt
if [ $? -eq 0 ] ; then
        LDAP_PHPSCHEDULEIT_PW=$(getPassword LDAP_PASSWORD_PHPSCHEDULEIT)
        sed -i -e "s~\[-LDAP_SSHA_PASSWORD_PHPSCHEDULEIT-\]~$(slappasswd -h {SSHA} -s $LDAP_PHPSCHEDULEIT_PW)~" $LDAP_TMP_LDIF
fi
eseriReplaceValues $LDAP_TMP_LDIF

mkdir /var/lib/ldap
chown $SLAPD_USER:$SLAPD_USER /var/lib/ldap
su -s /bin/bash -c "slapadd -f /etc/ldap/slapd.conf -l $LDAP_TMP_LDIF" $SLAPD_USER
rm $LDAP_TMP_LDIF

# Generate indexes
su -s /bin/bash -c "slapindex -v" $SLAPD_USER

# Folder for pid file
mkdir /var/run/slapd/
chown $SLAPD_USER:$SLAPD_USER /var/run/slapd/

# Convert to the new cn=config stype configuration
mkdir $SLAPD_CONFIG_DIT
slaptest -f $SLAPD_CONFIG -F $SLAPD_CONFIG_DIT
chown -R $SLAPD_USER:$SLAPD_USER $SLAPD_CONFIG_DIT

# Remove old config
rm $SLAPD_CONFIG
rm $SLAPD_ACL

# Start server
/etc/init.d/slapd start

# Monitoring
cat >>/etc/nagios/nrpe_local.cfg <<EOF
command[check_ldap]=/usr/lib/nagios/plugins/check_ldap -S -3 -H aphrodite.$DOMAIN -b $LDAP_BASE -D cn=libnss,ou=applications,ou=system,$LDAP_BASE -P "$LDAP_LIBNSS_PW"
EOF

exit 0
