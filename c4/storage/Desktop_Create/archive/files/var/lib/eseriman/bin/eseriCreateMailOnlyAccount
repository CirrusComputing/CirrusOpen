#!/bin/bash
#
# Create user account in the LDAP directory - v1.0
#
# Created by Karoly Molnar <kmolnar@eseri.com>
#
# Copyright (c) 1996-2010 Eseri (Free Open Source Solutions Inc.)
# All Rights Reserved
#
# Free Open Source Solutions Inc. owns and reserves all rights, title,
# and interest in and to this software in both machine and human
# readable forms.
#

# Include eseri functions
. ${0%/*}/eseriCommon

# Mark start point in log file
eseriStartLog "Create mail only account"

# Check for proper number of parameters
if [ $# -ne 3 ]; then
    echo "Usage: $SCRIPT_NAME Username Surename Given_Name"
    exit 1
fi

# Check the format of the input parameters
checkparam "Username" $1
checkparam "Surename" $2
checkparam "Given name" $3

ESERI_USERNAME=$1
ESERI_SURENAME=$2
ESERI_GIVENNAME=$3

# Log to eseri.log via syslog
/usr/local/share/eseri/EseriLog "$ESERI_USERNAME - Registration"

# Variables
USER_HOME=$USER_HOME_BASE/$ESERI_USERNAME
LDIF_ADDUSER_TEMPLATE=$TEMPLATE_LDAP_FOLDER/mailonly-adduser.ldif.template
LDIF_ADDUSER_FILE=/tmp/eseri.$RANDOM.adduser.ldif
LDIF_LASTUIDUPDATE_TEMPLATE=$TEMPLATE_LDAP_FOLDER/lastUidUpdate.ldif.template
LDIF_LASTUIDUPDATE_FILE=/tmp/eseri.$RANDOM.lastUidUpdate.ldif
LDIF_MAILONLYGROUP_ADD_TEMPLATE=$TEMPLATE_LDAP_FOLDER/mailonly-groupadd.ldif.template
LDIF_MAILONLYGROUP_ADD_FILE=/tmp/eseri.$RANDOM.mailonly-groupadd.ldif
LDAP_BASE=$(awk '$1 ~ "^BASE" {print $2}' /etc/ldap/ldap.conf 2>>$LOG_FILE)
REALM_TMP=$(grep default_realm /etc/krb5.conf)
REALM=${REALM_TMP#*=}
REALM_TMP2=${REALM_TMP#*=}
REALM=${REALM_TMP2#* }
DOMAIN=$(hostname -d)

EXIT_VAL=0
CREATE_HOME=0

# Safe method of reading and incrementing the maxUid value
LastUidUpdate()
{
	LASTUID_UPDATED=0
	LASTUID_NEW=1

	until [ $LASTUID_UPDATED -eq $LASTUID_NEW -a $EXIT_VAL -eq 0 ]; do
		# Read last Uid
		LASTUID=$(ldapsearch -LLL -b "ou=system,$LDAP_BASE" "(cn=lastUid)" uidNumber 2>&1 | tee -a $LOG_FILE | awk '$1 ~ "uidNumber:" {print $2}' 2>>$LOG_FILE)

		# Check wheter we could read the value or not
		[ $LASTUID -eq 0 -o $LASTUID -ne 0 ] 1>>$LOG_FILE 2>&1
		[ $? -ne 0 ] && return 1

		# New value
		LASTUID_NEW=$((LASTUID + 1))

		# Create LDIF file from template
		sed -e "s/\[-LDAP_UID_OLD-\]/$LASTUID/g" -e "s/\[-LDAP_UID_NEW-\]/$LASTUID_NEW/g" -e "s/\[-LDAP_BASE-\]/$LDAP_BASE/g" < $LDIF_LASTUIDUPDATE_TEMPLATE > $LDIF_LASTUIDUPDATE_FILE 2>>$LOG_FILE

		# Update LDAP
		ldapmodify -f $LDIF_LASTUIDUPDATE_FILE >>$LOG_FILE 2>&1
		EXIT_VAL=$?

		# Remove the LDIF file
		rm $LDIF_LASTUIDUPDATE_FILE >>$LOG_FILE 2>&1

		# Check whether we changed the last Uid or not
		LASTUID_UPDATED=$(ldapsearch -LLL -b "ou=system,$LDAP_BASE" "(cn=lastUid)" uidNumber 2>&1 | tee -a $LOG_FILE |  awk '$1 ~ "uidNumber:" {print $2}' 2>>$LOG_FILE)

		# If the actual value is equal to the value before the modify then something went totaly wrong hence aborting
		[ $LASTUID -eq $LASTUID_UPDATED ] && return 1
	done

	return 0
}

# Kerberos init
kinit -k -t $KEYTAB $KRB_IDENT >>$LOG_FILE 2>&1 || exit $?

# Read and Increment maxUid
LastUidUpdate
EXIT_VAL=$?

# Was it successful?
if [ $EXIT_VAL -eq 0 ]; then
	# Add user to LDAP - Create LDIF file from template
	sed "
s/\[-LDAP_BASE-\]/$LDAP_BASE/g
s/\[-USERNAME-\]/$ESERI_USERNAME/g
s/\[-USER_SURENAME-\]/$ESERI_SURENAME/g
s/\[-USER_GIVEN_NAME-\]/$ESERI_GIVENNAME/g
s/\[-USER_UID-\]/$LASTUID/g
s/\[-USER_GID-\]/$LASTUID/g
s|\[-USER_HOME_FOLDER-\]|$USER_HOME|g
s/\[-REALM-\]/$REALM/g
s/\[-DOMAIN-\]/$DOMAIN/g
s/\[-USER_EMAIL_QUOTA-\]/$EMAIL_QUOTA/g" < $LDIF_ADDUSER_TEMPLATE > $LDIF_ADDUSER_FILE 2>>$LOG_FILE

	cat $LDIF_ADDUSER_FILE >>$LOG_FILE

	# Execute the LDIF
	ldapadd -f $LDIF_ADDUSER_FILE >>$LOG_FILE 2>&1
	EXIT_VAL=$?
	[ $EXIT_VAL -eq 0 ] && CREATE_HOME=1

	# Remove the LDIF
	rm $LDIF_ADDUSER_FILE >>$LOG_FILE 2>&1
fi

##############################
# Add user to mailonly group
if [ $CREATE_HOME -eq 1 ]; then
	# Create LDIF file from template
	sed "
s/\[-LDAP_BASE-\]/$LDAP_BASE/g
s/\[-USERNAME-\]/$ESERI_USERNAME/g" < $LDIF_MAILONLYGROUP_ADD_TEMPLATE > $LDIF_MAILONLYGROUP_ADD_FILE 2>>$LOG_FILE
	cat $LDIF_MAILONLYGROUP_ADD_FILE >>$LOG_FILE

	# Execute the LDIF
	ldapmodify -f $LDIF_MAILONLYGROUP_ADD_FILE >>$LOG_FILE 2>&1

	# Remove the LDIF
	rm $LDIF_MAILONLYGROUP_ADD_FILE >>$LOG_FILE 2>&1
fi

# Kerberos deinit
kdestroy >>$LOG_FILE 2>&1

exit $EXIT_VAL
