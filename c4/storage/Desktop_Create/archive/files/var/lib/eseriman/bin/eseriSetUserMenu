#!/bin/bash
#
# Set the user menu files - v1.0
#
# Created by Karoly Molnar <kmolnar@eseri.com>
#
# Copyright (c) 1996-2010 Eseri (Free Open Source Solutions Inc.)
# All Rights Reserved
#
# Free Open Source Solutions Inc. owns and reserves all rights, title,
# and interest in and to this software in both machine and human
# readable forms.
#

# Include eseri functions
. ${0%/*}/eseriCommon

# Mark start point in log file
eseriStartLog "Set user menu"

# We need to run as root
if [[ $UID -ne 0 ]]; then
    echo "$SCRIPT_NAME must be run as root"
    exit 1
fi

# Check for proper number of parameters
if [[ $# -ne "1" && $# -ne "2" ]]; then
    echo "Usage: $SCRIPT_NAME Username Type" | tee >>$LOG_FILE
    echo " Type: Standard: standard, st (default)"
    echo "       Professional: professional, pro"
    exit 1
fi

# Check the format of the input parameters
checkparam "Username" $1
checkparam "Type" $2

ESERI_USERNAME=$1
ESERI_MENU_TYPE=$2

# Kerberos init
kinit -k -t $KEYTAB $KRB_IDENT >>$LOG_FILE 2>&1 || exit $?

# Query LDAP
HOME_FOLDER=$(ldapsearch -LLL "(uid=$ESERI_USERNAME)" homeDirectory 2>&1 | tee -a $LOG_FILE | awk '$ESERI_USERNAME ~ "homeDirectory:" {print $2}' 2>>$LOG_FILE)
MENU_FOLDER=$HOME_FOLDER/.config/menus

# Kerberos deinit
kdestroy >>$LOG_FILE 2>&1

# Check the users home folder (when ldapsearch fails $HOME_FOLDER is empty)
if [ ! -d $HOME_FOLDER ]; then
    echo "Error: The user's home folder '$HOME_FOLDER' does not exist" | tee >>$LOG_FILE
    exit 1
fi

# Check the menu folder
if [ ! -d $MENU_FOLDER ]; then
    mkdir -p $MENU_FOLDER >>$LOG_FILE 2>&1 || exit $?
fi

# Copy the common settings.menu file
cp $TEMPLATE_DESKTOP_FOLDER/.config/menus/settings.menu $MENU_FOLDER/ >>$LOG_FILE 2>&1 || exit $?

# Copy the applications.menu file
case "$ESERI_MENU_TYPE" in
    professional|pro)
	cp $TEMPLATE_DESKTOP_FOLDER/.config/menus/applications.menu.professional $MENU_FOLDER/applications.menu >>$LOG_FILE 2>&1 || exit $?
	;;

    *)
	cp $TEMPLATE_DESKTOP_FOLDER/.config/menus/applications.menu.standard $MENU_FOLDER/applications.menu >>$LOG_FILE 2>&1 || exit $?
	;;
esac

# Make sure that only root can write the menu files and the folder
chown -R root:root $MENU_FOLDER >>$LOG_FILE 2>&1 || exit $?
chmod 755 $MENU_FOLDER >>$LOG_FILE 2>&1 || exit $?
chmod 644 $MENU_FOLDER/* >>$LOG_FILE 2>&1 || exit $?

exit 0
