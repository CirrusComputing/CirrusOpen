#!/usr/bin/perl -w

#Removes an IP alias
use Regexp::Common qw(net);
if ( $#ARGV != 0 ){
    print "Usage: cirrus-del-ip 1.2.3.4\n";
    exit 1;
}

my $IPADDRESS=$ARGV[0];
unless ( $IPADDRESS =~ m/$RE{net}{IPv4}/ ){
    print "IP address must be IPv4 address in dotted quad form\n";
    exit 1;
}

my @elements = split(/\./, $IPADDRESS);
for (my $i = 0; $i < 4; $i++){
    if ($elements[$i] > 255){
	print "IP address contains quad out of range\n";
	exit 1;
    }
};
if ($elements[0] == 10){
    print "IP address in private range\n";
    exit 1;
}
if ($elements[0] == 192 && $elements[1] == 168){
    print "IP address in private range\n";
    exit 1;
}

my $ifconfig_out=`ifconfig`;
my $alias;
unless ($ifconfig_out =~ m/vlan100:([0-9]+) .*\n.*inet addr:$IPADDRESS/){
    print "IP address appears to be inactive\n";
    exit 1;
}
else {
    $alias = $1;
}

# no, this calls ip addr flush
#`ifdown ifcfg-vlan100:$alias`;

# given the quad IP, find the CIDR qualifier
# quad_cidr is in the format 1.2.3.4/27
my $quad_cidr;
my $ip_addr_out=`ip -o addr show vlan100`;
unless ($ip_addr_out =~ m/vlan100 *inet ($IPADDRESS\/[0-9]+)/){
    print "IP address appears to be inactive2\n";
    exit 1;
}
else {
    $quad_cidr = $1;
}

# take down the address
`ip addr del $quad_cidr dev vlan100`;
if ($? != 0){
    print "Failed to bring down alias $alias\n";
    exit 1;
}
unlink("/etc/sysconfig/network-scripts/ifcfg-vlan100:$alias");

exit 0;
